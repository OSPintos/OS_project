TOTAL TESTING SCORE: 84.1%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/userprog/Rubric.functionality           102/108  33.1%/ 35.0%
tests/userprog/Rubric.robustness               88/ 88  25.0%/ 25.0%
tests/userprog/no-vm/Rubric                     1/  1  10.0%/ 10.0%
tests/filesys/base/Rubric                      16/ 30  16.0%/ 30.0%
--------------------------------------------- --- --- ------ ------
Total                                                  84.1%/100.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	     3/ 3 tests/userprog/args-none
	     3/ 3 tests/userprog/args-single
	     3/ 3 tests/userprog/args-multiple
	     3/ 3 tests/userprog/args-many
	     3/ 3 tests/userprog/args-dbl-space

	- Test "create" system call.
	     3/ 3 tests/userprog/create-empty
	     3/ 3 tests/userprog/create-long
	     3/ 3 tests/userprog/create-normal
	     3/ 3 tests/userprog/create-exists

	- Test "open" system call.
	     3/ 3 tests/userprog/open-missing
	     3/ 3 tests/userprog/open-normal
	     3/ 3 tests/userprog/open-twice

	- Test "read" system call.
	     3/ 3 tests/userprog/read-normal
	     3/ 3 tests/userprog/read-zero

	- Test "write" system call.
	     3/ 3 tests/userprog/write-normal
	     3/ 3 tests/userprog/write-zero

	- Test "close" system call.
	     3/ 3 tests/userprog/close-normal

	- Test "exec" system call.
	     5/ 5 tests/userprog/exec-once
	     5/ 5 tests/userprog/exec-multiple
	     5/ 5 tests/userprog/exec-arg

	- Test "wait" system call.
	     5/ 5 tests/userprog/wait-simple
	     5/ 5 tests/userprog/wait-twice

	- Test "exit" system call.
	     5/ 5 tests/userprog/exit

	- Test "halt" system call.
	     3/ 3 tests/userprog/halt

	- Test recursive execution of user programs.
	    15/15 tests/userprog/multi-recurse

	- Test read-only executable feature.
	     3/ 3 tests/userprog/rox-simple
	  ** 0/ 3 tests/userprog/rox-child
	  ** 0/ 3 tests/userprog/rox-multichild

	- Section summary.
	     26/ 28 tests passed
	    102/108 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	     2/ 2 tests/userprog/close-stdin
	     2/ 2 tests/userprog/close-stdout
	     2/ 2 tests/userprog/close-bad-fd
	     2/ 2 tests/userprog/close-twice
	     2/ 2 tests/userprog/read-bad-fd
	     2/ 2 tests/userprog/read-stdout
	     2/ 2 tests/userprog/write-bad-fd
	     2/ 2 tests/userprog/write-stdin
	     2/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	     3/ 3 tests/userprog/create-bad-ptr
	     3/ 3 tests/userprog/exec-bad-ptr
	     3/ 3 tests/userprog/open-bad-ptr
	     3/ 3 tests/userprog/read-bad-ptr
	     3/ 3 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	     3/ 3 tests/userprog/create-bound
	     3/ 3 tests/userprog/open-boundary
	     3/ 3 tests/userprog/read-boundary
	     3/ 3 tests/userprog/write-boundary

	- Test handling of null pointer and empty strings.
	     2/ 2 tests/userprog/create-null
	     2/ 2 tests/userprog/open-null
	     2/ 2 tests/userprog/open-empty

	- Test robustness of system call implementation.
	     3/ 3 tests/userprog/sc-bad-arg
	     3/ 3 tests/userprog/sc-bad-sp
	     5/ 5 tests/userprog/sc-boundary
	     5/ 5 tests/userprog/sc-boundary-2

	- Test robustness of "exec" and "wait" system calls.
	     5/ 5 tests/userprog/exec-missing
	     5/ 5 tests/userprog/wait-bad-pid
	     5/ 5 tests/userprog/wait-killed

	- Test robustness of exception handling.
	     1/ 1 tests/userprog/bad-read
	     1/ 1 tests/userprog/bad-write
	     1/ 1 tests/userprog/bad-jump
	     1/ 1 tests/userprog/bad-read2
	     1/ 1 tests/userprog/bad-write2
	     1/ 1 tests/userprog/bad-jump2

	- Section summary.
	     34/ 34 tests passed
	     88/ 88 points subtotal

Functionality of features that VM might break (tests/userprog/no-vm/Rubric):

	     1/ 1 tests/userprog/no-vm/multi-oom

	- Section summary.
	      1/  1 tests passed
	      1/  1 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	     1/ 1 tests/filesys/base/sm-create
	     2/ 2 tests/filesys/base/sm-full
	  ** 0/ 2 tests/filesys/base/sm-random
	     2/ 2 tests/filesys/base/sm-seq-block
	     3/ 3 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	     1/ 1 tests/filesys/base/lg-create
	     2/ 2 tests/filesys/base/lg-full
	  ** 0/ 2 tests/filesys/base/lg-random
	     2/ 2 tests/filesys/base/lg-seq-block
	     3/ 3 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	  ** 0/ 4 tests/filesys/base/syn-read
	  ** 0/ 4 tests/filesys/base/syn-write
	  ** 0/ 2 tests/filesys/base/syn-remove

	- Section summary.
	      8/ 13 tests passed
	     16/ 30 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-child FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (rox-child) begin
  (rox-child) open "child-rox"
  (rox-child) read "child-rox"
  (rox-child) write "child-rox"
  (rox-child) exec "child-rox 1"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (rox-child) write "child-rox"
  (rox-child) end
  rox-child: exit(0)
Differences in `diff -u' format:
  (rox-child) begin
  (rox-child) open "child-rox"
  (rox-child) read "child-rox"
- (rox-child) write "child-rox"
- (rox-child) exec "child-rox 1"
- (child-rox) begin
- (child-rox) try to write "child-rox"
- (child-rox) try to write "child-rox"
- (child-rox) end
- child-rox: exit(12)
- (rox-child) write "child-rox"
- (rox-child) end
- rox-child: exit(0)
+ rox-child: exit(-1)

OUTPUT FROM tests/userprog/rox-child:

Copying tests/userprog/rox-child to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu -hda /tmp/YnJLelaYz6.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.............
Kernel command line: -q -f extract run rox-child
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 215 sectors (107 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 155 sectors (77 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-child':
(rox-child) begin
(rox-child) open "child-rox"
(rox-child) read "child-rox"
rox-child: exit(-1)
Execution of 'rox-child' complete.
Timer: 91 ticks
Thread: 36 idle ticks, 52 kernel ticks, 3 user ticks
hda2 (filesys): 93 reads, 316 writes
hda3 (scratch): 154 reads, 2 writes
Console: 973 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-multichild FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (rox-multichild) begin
  (rox-multichild) open "child-rox"
  (rox-multichild) read "child-rox"
  (rox-multichild) write "child-rox"
  (rox-multichild) exec "child-rox 5"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 4"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 3"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 2"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) exec "child-rox 1"
  (child-rox) begin
  (child-rox) try to write "child-rox"
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (child-rox) try to write "child-rox"
  (child-rox) end
  child-rox: exit(12)
  (rox-multichild) write "child-rox"
  (rox-multichild) end
  rox-multichild: exit(0)
Differences in `diff -u' format:
  (rox-multichild) begin
  (rox-multichild) open "child-rox"
  (rox-multichild) read "child-rox"
- (rox-multichild) write "child-rox"
- (rox-multichild) exec "child-rox 5"
- (child-rox) begin
- (child-rox) try to write "child-rox"
- (child-rox) exec "child-rox 4"
- (child-rox) begin
- (child-rox) try to write "child-rox"
- (child-rox) exec "child-rox 3"
- (child-rox) begin
- (child-rox) try to write "child-rox"
- (child-rox) exec "child-rox 2"
- (child-rox) begin
- (child-rox) try to write "child-rox"
- (child-rox) exec "child-rox 1"
- (child-rox) begin
- (child-rox) try to write "child-rox"
- (child-rox) try to write "child-rox"
- (child-rox) end
- child-rox: exit(12)
- (child-rox) try to write "child-rox"
- (child-rox) end
- child-rox: exit(12)
- (child-rox) try to write "child-rox"
- (child-rox) end
- child-rox: exit(12)
- (child-rox) try to write "child-rox"
- (child-rox) end
- child-rox: exit(12)
- (child-rox) try to write "child-rox"
- (child-rox) end
- child-rox: exit(12)
- (rox-multichild) write "child-rox"
- (rox-multichild) end
- rox-multichild: exit(0)
+ rox-multichild: exit(-1)

OUTPUT FROM tests/userprog/rox-multichild:

Copying tests/userprog/rox-multichild to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu -hda /tmp/iS3dvtVzvf.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.............
Kernel command line: -q -f extract run rox-multichild
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 215 sectors (107 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 155 sectors (77 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
rox-multichild: exit(-1)
Execution of 'rox-multichild' complete.
Timer: 90 ticks
Thread: 34 idle ticks, 53 kernel ticks, 3 user ticks
hda2 (filesys): 93 reads, 316 writes
hda3 (scratch): 154 reads, 2 writes
Console: 1013 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-random FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sm-random) begin
  (sm-random) create "bazzle"
  (sm-random) open "bazzle"
  (sm-random) write "bazzle" in random order
  (sm-random) read "bazzle" in random order
  (sm-random) close "bazzle"
  (sm-random) end
Differences in `diff -u' format:
  (sm-random) begin
  (sm-random) create "bazzle"
  (sm-random) open "bazzle"
  (sm-random) write "bazzle" in random order
- (sm-random) read "bazzle" in random order
- (sm-random) close "bazzle"
- (sm-random) end

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/sm-random:

Copying tests/filesys/base/sm-random to scratch partition...
qemu -hda /tmp/d1f6XRGcmk.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.............
Kernel command line: -q -f extract run sm-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 215 sectors (107 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 78 sectors (39 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-random' into the file system...
Erasing ustar archive...
Executing 'sm-random':
(sm-random) begin
(sm-random) create "bazzle"
(sm-random) open "bazzle"
(sm-random) write "bazzle" in random order
sm-random: exit(-1)
Execution of 'sm-random' complete.
Timer: 85 ticks
Thread: 34 idle ticks, 47 kernel ticks, 4 user ticks
hda2 (filesys): 91 reads, 168 writes
hda3 (scratch): 77 reads, 2 writes
Console: 966 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-random FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (lg-random) begin
  (lg-random) create "bazzle"
  (lg-random) open "bazzle"
  (lg-random) write "bazzle" in random order
  (lg-random) read "bazzle" in random order
  (lg-random) close "bazzle"
  (lg-random) end
Differences in `diff -u' format:
  (lg-random) begin
  (lg-random) create "bazzle"
  (lg-random) open "bazzle"
  (lg-random) write "bazzle" in random order
- (lg-random) read "bazzle" in random order
- (lg-random) close "bazzle"
- (lg-random) end

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/lg-random:

Copying tests/filesys/base/lg-random to scratch partition...
qemu -hda /tmp/stk_XNZKew.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.............
Kernel command line: -q -f extract run lg-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 215 sectors (107 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 78 sectors (39 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-random' into the file system...
Erasing ustar archive...
Executing 'lg-random':
(lg-random) begin
(lg-random) create "bazzle"
(lg-random) open "bazzle"
(lg-random) write "bazzle" in random order
lg-random: exit(-1)
Execution of 'lg-random' complete.
Timer: 88 ticks
Thread: 37 idle ticks, 47 kernel ticks, 4 user ticks
hda2 (filesys): 91 reads, 314 writes
hda3 (scratch): 77 reads, 2 writes
Console: 966 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-read FAILURE:

Kernel panic in run: PANIC at ../../threads/synch.c:211 in lock_release(): assertion `lock_held_by_current_thread (lock)' failed.
Call stack: 0xc002adb0 0xc0023b96 0xc002f718 0xc002f198 0xc00227ce 0xc0022a2b 0x804b085 0x804817d 0x8048a4c
Translation of call stack:
In kernel.o:
0xc002adb0: debug_panic (.../../lib/kernel/debug.c:38)
0xc0023b96: lock_release (...../../threads/synch.c:213)
0xc002f718: syscall_read (...../userprog/syscall.c:273)
0xc002f198: syscall_handler (.../../userprog/syscall.c:92)
0xc00227ce: intr_handler (..../threads/interrupt.c:364)
0xc0022a2b: intr_entry (threads/intr-stubs.S:38)
0x0804b085: (unknown)
In tests/filesys/base/syn-read:
0x0804817d: test_main (...ilesys/base/syn-read.c:26)
0x08048a4c: main (...ild/../../tests/main.c:14)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/syn-read:

Copying tests/filesys/base/syn-read to scratch partition...
Copying tests/filesys/base/child-syn-read to scratch partition...
qemu -hda /tmp/mDLXecWfUj.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.............
Kernel command line: -q -f extract run syn-read
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 215 sectors (107 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 159 sectors (79 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Erasing ustar archive...
Executing 'syn-read':
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
(syn-read) write "data"
(syn-read) close "data"
(syn-read) exec child 1 of 10: "child-syn-read 0"
(syn-read) exec child 2 of 10: "child-syn-read 1"
Kernel PANIC at ../../threads/synch.c:211 in lock_release(): assertion `lock_held_by_current_thread (lock)' failed.
Call stack: 0xc002adb0 0xc0023b96 0xc002f718 0xc002f198 0xc00227ce 0xc0022a2b 0x804b085 0x804817d 0x8048a4c.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 93 ticks
Thread: 39 idle ticks, 48 kernel ticks, 6 user ticks
hda2 (filesys): 171 reads, 332 writes
hda3 (scratch): 158 reads, 2 writes
Console: 1437 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-write FAILURE:

run: wait for child 1 of 10 returned -1 (expected 0): FAILED

OUTPUT FROM tests/filesys/base/syn-write:

Copying tests/filesys/base/syn-write to scratch partition...
Copying tests/filesys/base/child-syn-wrt to scratch partition...
qemu -hda /tmp/fSsC0k3peX.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.............
Kernel command line: -q -f extract run syn-write
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 215 sectors (107 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 159 sectors (79 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Erasing ustar archive...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
child-syn-wrt: exit(-1)
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
child-syn-wrt: exit(-1)
(syn-write) exec child 4 of 10: "child-syn-wrt 3"
child-syn-wrt: exit(-1)
(syn-write) exec child 5 of 10: "child-syn-wrt 4"
child-syn-wrt: exit(-1)
(syn-write) exec child 6 of 10: "child-syn-wrt 5"
child-syn-wrt: exit(-1)
(syn-write) exec child 7 of 10: "child-syn-wrt 6"
child-syn-wrt: exit(-1)
(syn-write) exec child 8 of 10: "child-syn-wrt 7"
child-syn-wrt: exit(-1)
(syn-write) exec child 9 of 10: "child-syn-wrt 8"
child-syn-wrt: exit(-1)
(syn-write) exec child 10 of 10: "child-syn-wrt 9"
child-syn-wrt: exit(-1)
(syn-write) wait for child 1 of 10 returned -1 (expected 0)
(syn-write) wait for child 1 of 10 returned -1 (expected 0): FAILED
syn-write: exit(1)
Execution of 'syn-write' complete.
Timer: 121 ticks
Thread: 43 idle ticks, 54 kernel ticks, 24 user ticks
hda2 (filesys): 657 reads, 338 writes
hda3 (scratch): 158 reads, 2 writes
Console: 1793 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-remove FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (syn-remove) begin
  (syn-remove) create "deleteme"
  (syn-remove) open "deleteme"
  (syn-remove) remove "deleteme"
  (syn-remove) write "deleteme"
  (syn-remove) seek "deleteme" to 0
  (syn-remove) read "deleteme"
  (syn-remove) close "deleteme"
  (syn-remove) end
Differences in `diff -u' format:
  (syn-remove) begin
  (syn-remove) create "deleteme"
  (syn-remove) open "deleteme"
  (syn-remove) remove "deleteme"
  (syn-remove) write "deleteme"
  (syn-remove) seek "deleteme" to 0
- (syn-remove) read "deleteme"
- (syn-remove) close "deleteme"
- (syn-remove) end

(Process exit codes are excluded for matching purposes.)

OUTPUT FROM tests/filesys/base/syn-remove:

Copying tests/filesys/base/syn-remove to scratch partition...
qemu -hda /tmp/ipcQpGFs4Y.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.............
Kernel command line: -q -f extract run syn-remove
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  52,377,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 215 sectors (107 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 77 sectors (38 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-remove' into the file system...
Erasing ustar archive...
Executing 'syn-remove':
(syn-remove) begin
(syn-remove) create "deleteme"
(syn-remove) open "deleteme"
(syn-remove) remove "deleteme"
(syn-remove) write "deleteme"
(syn-remove) seek "deleteme" to 0
syn-remove: exit(-1)
Execution of 'syn-remove' complete.
Timer: 84 ticks
Thread: 35 idle ticks, 45 kernel ticks, 4 user ticks
hda2 (filesys): 94 reads, 169 writes
hda3 (scratch): 76 reads, 2 writes
Console: 1030 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
